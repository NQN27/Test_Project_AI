create a class which name is city containing id, distance_cost, path, name

function UCS_search(start,goal):
	q = empty priority queue
	p = city() with p.name = start, p.distance_cost = 0
	create empty list named visited 
 	while q is not empty do:
		take the first class variable in q and dequeue it
		if p.name is the goal then:
			return p.distance_cost, p.path
		if p.name not in visited then:
			for city that is adjacent to p.name do:
				p1 = city() with p1.name = adjacent_city
				p1.distance_cost = p.distance_cost + the cost to go to adjacent city
				create a list p1.path equal the list p.path plus the adjacent_city
 				add p1 to the q
				add adjacent_city to the visited
	return 0 if not find the way to the goal
	
	